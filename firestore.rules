rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write: if true
    //       // request.time < timestamp.date(2022, 2, 19);

    // }
    match /users/{userId} {
      allow read, create, update: if request.auth.uid == request.resource.data.user_id 
    }

    match /organizations/{orgId} {
      function isOrgOwner(){
         return resource.data.owner == request.auth.uid;
      }

      function verifyOrgData(){
        let general=['name', 'size', 'industry', 'owner', 'status'];
        let additional=['createdAt', 'modifiedAt', 'createdBy', 'modifiedBy'];
        let info=['address', 'city', 'phone'];
        let person=['firstName', 'lastName', 'contactPhone'];
        let optional=['website'];
        let required=general.concat(info).concat(person).concat(additional);
        let allFields=required.concat(optional);

        return request.resource.data.keys().hasAll(required) &&
          request.resource.data.keys().hasOnly(allFields) &&
          request.resource.data.name is string &&
          request.resource.data.size is string &&
          request.resource.data.industry is string &&
          request.resource.data.owner is string &&
          request.resource.data.status is string &&
          request.resource.data.address is string &&
          request.resource.data.city is string &&
          request.resource.data.phone is string &&
          request.resource.data.firstName is string &&
          request.resource.data.lastName is string &&
          request.resource.data.contactPhone is string &&
          request.resource.data.website is string &&
          request.resource.data.createdAt is timestamp &&
          request.resource.data.modifiedAt is timestamp &&
          request.resource.data.createdBy is string &&
          request.resource.data.modifiedBy is string
      }

      

      allow read: if isOrgOwner()
      allow create: if request.auth != null && verifyOrgData()
      allow update:if isOrgOwner() && verifyOrgData()

      function getOrgData(){
        return get(/databases/$(database)/documents/organizations/$(orgId)).data
      }

      function isOwner(){
        return request.auth.uid == getOrgData().owner
      }

      

      match /items/{itemId} {

        function verifyItemData(){
          let general=['name', 'type', 'status', 'slug', 'createdBy', 'modifiedBy', 'createdAt', 'modifiedAt'];
          let extras=['costAccount', 'costPrice', 'sellingAccount', 'sellingPrice'];
          let required= general.concat(extras);
          let optional=['variant', 'costDetails', 'costTax', 'itemDescription', 'sellingDetails', 'sellingTax'];
          let allFields=required.concat(optional);

          return request.resource.data.keys().hasAll(required) &&
            request.resource.data.keys().hasOnly(allFields) &&
            request.resource.data.name is string &&
            request.resource.data.type is string &&
            request.resource.data.status is string &&
            request.resource.data.slug is string &&
            request.resource.data.createdBy is string &&
            request.resource.data.modifiedBy is string &&
            request.resource.data.createdAt is timestamp &&
            request.resource.data.modifiedAt is timestamp &&
            request.resource.data.costAccount is string &&
            request.resource.data.costPrice is int &&
            request.resource.data.sellingAccount is string &&
            request.resource.data.sellingPrice is int &&
            request.resource.data.variant is string &&
            request.resource.data.costDetails is string &&
            request.resource.data.costTax is string &&
            request.resource.data.itemDescription is string &&
            request.resource.data.sellingDetails is string &&
            request.resource.data.sellingTax is string
        }

        function allowItemUpdate(){
          let cost=['costDetails', 'costAccount', 'costPrice', 'costTax'];
          let selling=['sellingDetails', 'sellingAccount', 'sellingPrice', 'sellingTax'];
          let general=['name', 'variant', 'slug', 'status', 'type', 'itemDescription', 'modifiedAt', 'modifiedBy'];
          let allowed=general.concat(selling).concat(cost);

          return request.resource.data.diff(resource.data).affectedKeys().hasOnly(allowed)
        }

        allow read: if isOwner();
        allow create: if isOwner() && verifyItemData();
        allow update: if isOwner() && verifyItemData() && allowItemUpdate()
      }
    }
    
  }
}